# docker-compose file for local development and testing with container image.
version: '3.2'
services:
  devserver: &devserver
    build:
      context: .
      dockerfile: compose/Dockerfile
    expose:
      - "8080"
    ports:
      - "8080:8080"
    depends_on:
      - "db"
      - "debugsmtp"
      - "hydra"
    # For devserver, mount the local directory inside the container as a volume
    # to allow local changes to be reflected without having to re-build the
    # container.
    volumes:
      - type: bind
        source: ./
        target: /usr/src/app
        read_only: true
    environment:
      - IAR_USE_EXPERIMENTAL_OAUTH2_ENDPOINT
      - IAR_CLIENT_ID
      - IAR_CLIENT_SECRET
    env_file:
      - compose/base.env
  tox:
    <<: *devserver
    entrypoint: ["tox"]
    command: []
    env_file:
      - compose/base.env
      - compose/tox.env
    volumes:
      - type: bind
        source: ./
        target: /usr/src/app
        read_only: true
      - type: volume
        source: tox-data
        target: /tmp/tox-data
  migrate:
    <<: *devserver
    command: ["migrate"]
  shell:
    <<: *devserver
    command: ["shell"]
  db:
    image: postgres
    env_file:
      - compose/base.env
  debugsmtp:
    image: mailhog/mailhog
    ports:
      - "8025:8025"
  consent:
    build:
      context: compose/consent
    entrypoint: ["flask"]
    command: ["run", "-h", "0.0.0.0", "-p", "8090"]
    volumes:
      - "./compose/consent/:/usr/src/app/:ro"
    working_dir: "/usr/src/app"
    environment:
      - FLASK_DEBUG=1
      - FLASK_APP=app.py
    env_file:
      - compose/hydra.env
    ports:
      - "8090:8090"
  hydra:
    image: oryd/hydra:v0.11.1-alpine
    entrypoint: ["/tmp/start-hydra.sh"]
    ports:
      - "4444:4444"
      - "4445:4445"
    env_file:
      - compose/hydra.env
    depends_on:
      - hydradb
      - consent
    volumes:
      - "./compose/start-hydra.sh:/tmp/start-hydra.sh/:ro"
  hydradb:
    image: postgres
    env_file:
      - compose/hydra.env
  debugsmtp:
    image: mailhog/mailhog
    ports:
      - "8025:8025"

volumes:
  # A persistent volume for tox to store its stuff. This allows caching of
  # virtualenvs between runs.
  tox-data:
